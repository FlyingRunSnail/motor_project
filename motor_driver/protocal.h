#ifndef __PROTOCOL_HEAD__
#define __PROTOCOL_HEAD__

#define FRAME_HEAD 0xA5

enum(
    eCMD_0x73 = 0x73,
    eCMD_0x6d = 0x6d,
    eCMD_0x70 = 0x70,
    eCMD_0x74 = 0x74,
    eCMD_0x63 = 0x63,
    eCMD_0x64 = 0x64,
    eCMD_0x76 = 0x76,
    eCMD_0x77 = 0x77,
    eCMD_0x68 = 0x68,
    eCMD_0x72 = 0x72,
    eCMD_0x65 = 0x65,
    eCMD_0x66 = 0x66,
    eCMD_0x6e = 0x6e,
    eCMD_0x6b = 0x6b,
    eCMD_0x71 = 0x71,
    eCMD_0x6f = 0x6f,
    eCMD_0x61 = 0x61,
    eCMD_0x67 = 0x67,
    eCMD_0x69 = 0x69,
    eCMD_0x6a = 0x6a,
    eCMD_0x6c = 0x6c,
    eCMD_0x62 = 0x62,
    eCMD_0x78 = 0x78,
    eCMD_0x79 = 0x79,
    eCMD_0x5a = 0x5a,
    eCMD_0x75 = 0x75,
    eCMD_0x49 = 0x49,
    eCMD_0x4a = 0x4a,
    eCMD_0x4b = 0x4b,
    eCMD_0x46 = 0x46,
    eCMD_0x52 = 0x52,
    eCMD_0x4c = 0x4c,
    eCMD_0x4d = 0x4d,
    eCMD_0x4e = 0x4e,
    eCMD_0x4f = 0x4f,
    eCMD_0x50 = 0x50,
    eCMD_0x51 = 0x51,
    eCMD_0x54 = 0x54,
    eCMD_0x53 = 0x53,
    eCMD_0x58 = 0x58,
    eCMD_0x59 = 0x59,
    eCMD_0x5a = 0x5a,

    eCMD_MAX
    ); 


typedef struct comm_frame
{
    unsigned char start;
    unsigned char addr;
    unsigned char command;
    unsigned int  data;
    unsigned char checksum;

}comm_frame_t;

comm_frame_t * alloc_frame(unsigned char addr, unsigned char command, unsigned int data);
void free_frame(comm_frame_t *frame);

#endif
